//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace Coop.DonationService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DonationServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DonationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddDonationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDonationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDonationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDonationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDonationsByCreditUnionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDonationsByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDonationsByDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DonationService() {
            this.Url = global::Coop.Properties.Settings.Default.Coop_DonationService_DonationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddDonationCompletedEventHandler AddDonationCompleted;
        
        /// <remarks/>
        public event DeleteDonationCompletedEventHandler DeleteDonationCompleted;
        
        /// <remarks/>
        public event UpdateDonationCompletedEventHandler UpdateDonationCompleted;
        
        /// <remarks/>
        public event GetDonationCompletedEventHandler GetDonationCompleted;
        
        /// <remarks/>
        public event GetDonationsByCreditUnionCompletedEventHandler GetDonationsByCreditUnionCompleted;
        
        /// <remarks/>
        public event GetDonationsByCategoryCompletedEventHandler GetDonationsByCategoryCompleted;
        
        /// <remarks/>
        public event GetDonationsByDateCompletedEventHandler GetDonationsByDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDonation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Donation AddDonation(
                    string userHash, 
                    int creditUnion, 
                    string title, 
                    int category, 
                    int onclock, 
                    int offclock, 
                    int dollars, 
                    int otherContributions, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    double latitude, 
                    double longitude, 
                    string additionalInfo, 
                    System.DateTime donationDate, 
                    int userID) {
            object[] results = this.Invoke("AddDonation", new object[] {
                        userHash,
                        creditUnion,
                        title,
                        category,
                        onclock,
                        offclock,
                        dollars,
                        otherContributions,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        latitude,
                        longitude,
                        additionalInfo,
                        donationDate,
                        userID});
            return ((Donation)(results[0]));
        }
        
        /// <remarks/>
        public void AddDonationAsync(
                    string userHash, 
                    int creditUnion, 
                    string title, 
                    int category, 
                    int onclock, 
                    int offclock, 
                    int dollars, 
                    int otherContributions, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    double latitude, 
                    double longitude, 
                    string additionalInfo, 
                    System.DateTime donationDate, 
                    int userID) {
            this.AddDonationAsync(userHash, creditUnion, title, category, onclock, offclock, dollars, otherContributions, address1, address2, city, state, zip, country, latitude, longitude, additionalInfo, donationDate, userID, null);
        }
        
        /// <remarks/>
        public void AddDonationAsync(
                    string userHash, 
                    int creditUnion, 
                    string title, 
                    int category, 
                    int onclock, 
                    int offclock, 
                    int dollars, 
                    int otherContributions, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    double latitude, 
                    double longitude, 
                    string additionalInfo, 
                    System.DateTime donationDate, 
                    int userID, 
                    object userState) {
            if ((this.AddDonationOperationCompleted == null)) {
                this.AddDonationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDonationOperationCompleted);
            }
            this.InvokeAsync("AddDonation", new object[] {
                        userHash,
                        creditUnion,
                        title,
                        category,
                        onclock,
                        offclock,
                        dollars,
                        otherContributions,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        latitude,
                        longitude,
                        additionalInfo,
                        donationDate,
                        userID}, this.AddDonationOperationCompleted, userState);
        }
        
        private void OnAddDonationOperationCompleted(object arg) {
            if ((this.AddDonationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDonationCompleted(this, new AddDonationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDonation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDonation(string userHash, int id) {
            this.Invoke("DeleteDonation", new object[] {
                        userHash,
                        id});
        }
        
        /// <remarks/>
        public void DeleteDonationAsync(string userHash, int id) {
            this.DeleteDonationAsync(userHash, id, null);
        }
        
        /// <remarks/>
        public void DeleteDonationAsync(string userHash, int id, object userState) {
            if ((this.DeleteDonationOperationCompleted == null)) {
                this.DeleteDonationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDonationOperationCompleted);
            }
            this.InvokeAsync("DeleteDonation", new object[] {
                        userHash,
                        id}, this.DeleteDonationOperationCompleted, userState);
        }
        
        private void OnDeleteDonationOperationCompleted(object arg) {
            if ((this.DeleteDonationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDonationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDonation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Donation UpdateDonation(
                    string userHash, 
                    int id, 
                    int creditUnion, 
                    string title, 
                    int category, 
                    int onclock, 
                    int offclock, 
                    int dollars, 
                    int otherContributions, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    double latitude, 
                    double longitude, 
                    string additionalInfo, 
                    System.DateTime donationDate, 
                    int userID) {
            object[] results = this.Invoke("UpdateDonation", new object[] {
                        userHash,
                        id,
                        creditUnion,
                        title,
                        category,
                        onclock,
                        offclock,
                        dollars,
                        otherContributions,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        latitude,
                        longitude,
                        additionalInfo,
                        donationDate,
                        userID});
            return ((Donation)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDonationAsync(
                    string userHash, 
                    int id, 
                    int creditUnion, 
                    string title, 
                    int category, 
                    int onclock, 
                    int offclock, 
                    int dollars, 
                    int otherContributions, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    double latitude, 
                    double longitude, 
                    string additionalInfo, 
                    System.DateTime donationDate, 
                    int userID) {
            this.UpdateDonationAsync(userHash, id, creditUnion, title, category, onclock, offclock, dollars, otherContributions, address1, address2, city, state, zip, country, latitude, longitude, additionalInfo, donationDate, userID, null);
        }
        
        /// <remarks/>
        public void UpdateDonationAsync(
                    string userHash, 
                    int id, 
                    int creditUnion, 
                    string title, 
                    int category, 
                    int onclock, 
                    int offclock, 
                    int dollars, 
                    int otherContributions, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    double latitude, 
                    double longitude, 
                    string additionalInfo, 
                    System.DateTime donationDate, 
                    int userID, 
                    object userState) {
            if ((this.UpdateDonationOperationCompleted == null)) {
                this.UpdateDonationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDonationOperationCompleted);
            }
            this.InvokeAsync("UpdateDonation", new object[] {
                        userHash,
                        id,
                        creditUnion,
                        title,
                        category,
                        onclock,
                        offclock,
                        dollars,
                        otherContributions,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        latitude,
                        longitude,
                        additionalInfo,
                        donationDate,
                        userID}, this.UpdateDonationOperationCompleted, userState);
        }
        
        private void OnUpdateDonationOperationCompleted(object arg) {
            if ((this.UpdateDonationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDonationCompleted(this, new UpdateDonationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDonation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Donation GetDonation(int id) {
            object[] results = this.Invoke("GetDonation", new object[] {
                        id});
            return ((Donation)(results[0]));
        }
        
        /// <remarks/>
        public void GetDonationAsync(int id) {
            this.GetDonationAsync(id, null);
        }
        
        /// <remarks/>
        public void GetDonationAsync(int id, object userState) {
            if ((this.GetDonationOperationCompleted == null)) {
                this.GetDonationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDonationOperationCompleted);
            }
            this.InvokeAsync("GetDonation", new object[] {
                        id}, this.GetDonationOperationCompleted, userState);
        }
        
        private void OnGetDonationOperationCompleted(object arg) {
            if ((this.GetDonationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDonationCompleted(this, new GetDonationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDonationsByCreditUnion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Donation[] GetDonationsByCreditUnion(int creditUnion) {
            object[] results = this.Invoke("GetDonationsByCreditUnion", new object[] {
                        creditUnion});
            return ((Donation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDonationsByCreditUnionAsync(int creditUnion) {
            this.GetDonationsByCreditUnionAsync(creditUnion, null);
        }
        
        /// <remarks/>
        public void GetDonationsByCreditUnionAsync(int creditUnion, object userState) {
            if ((this.GetDonationsByCreditUnionOperationCompleted == null)) {
                this.GetDonationsByCreditUnionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDonationsByCreditUnionOperationCompleted);
            }
            this.InvokeAsync("GetDonationsByCreditUnion", new object[] {
                        creditUnion}, this.GetDonationsByCreditUnionOperationCompleted, userState);
        }
        
        private void OnGetDonationsByCreditUnionOperationCompleted(object arg) {
            if ((this.GetDonationsByCreditUnionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDonationsByCreditUnionCompleted(this, new GetDonationsByCreditUnionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDonationsByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Donation[] GetDonationsByCategory(int category) {
            object[] results = this.Invoke("GetDonationsByCategory", new object[] {
                        category});
            return ((Donation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDonationsByCategoryAsync(int category) {
            this.GetDonationsByCategoryAsync(category, null);
        }
        
        /// <remarks/>
        public void GetDonationsByCategoryAsync(int category, object userState) {
            if ((this.GetDonationsByCategoryOperationCompleted == null)) {
                this.GetDonationsByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDonationsByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetDonationsByCategory", new object[] {
                        category}, this.GetDonationsByCategoryOperationCompleted, userState);
        }
        
        private void OnGetDonationsByCategoryOperationCompleted(object arg) {
            if ((this.GetDonationsByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDonationsByCategoryCompleted(this, new GetDonationsByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDonationsByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Donation[] GetDonationsByDate(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("GetDonationsByDate", new object[] {
                        start,
                        end});
            return ((Donation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDonationsByDateAsync(System.DateTime start, System.DateTime end) {
            this.GetDonationsByDateAsync(start, end, null);
        }
        
        /// <remarks/>
        public void GetDonationsByDateAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.GetDonationsByDateOperationCompleted == null)) {
                this.GetDonationsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDonationsByDateOperationCompleted);
            }
            this.InvokeAsync("GetDonationsByDate", new object[] {
                        start,
                        end}, this.GetDonationsByDateOperationCompleted, userState);
        }
        
        private void OnGetDonationsByDateOperationCompleted(object arg) {
            if ((this.GetDonationsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDonationsByDateCompleted(this, new GetDonationsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Donation {
        
        private int idField;
        
        private CreditUnion donatingCreditUnionField;
        
        private string titleField;
        
        private int categoryField;
        
        private int onClockHoursField;
        
        private int offClockHoursField;
        
        private int totalHoursField;
        
        private int dollarsField;
        
        private int otherContributionsValueField;
        
        private int totalDollarValueField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zIPField;
        
        private string countryField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string additionalInfoField;
        
        private System.DateTime donationDateField;
        
        private System.DateTime dateAddedField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public CreditUnion DonatingCreditUnion {
            get {
                return this.donatingCreditUnionField;
            }
            set {
                this.donatingCreditUnionField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public int OnClockHours {
            get {
                return this.onClockHoursField;
            }
            set {
                this.onClockHoursField = value;
            }
        }
        
        /// <remarks/>
        public int OffClockHours {
            get {
                return this.offClockHoursField;
            }
            set {
                this.offClockHoursField = value;
            }
        }
        
        /// <remarks/>
        public int TotalHours {
            get {
                return this.totalHoursField;
            }
            set {
                this.totalHoursField = value;
            }
        }
        
        /// <remarks/>
        public int Dollars {
            get {
                return this.dollarsField;
            }
            set {
                this.dollarsField = value;
            }
        }
        
        /// <remarks/>
        public int OtherContributionsValue {
            get {
                return this.otherContributionsValueField;
            }
            set {
                this.otherContributionsValueField = value;
            }
        }
        
        /// <remarks/>
        public int TotalDollarValue {
            get {
                return this.totalDollarValueField;
            }
            set {
                this.totalDollarValueField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZIP {
            get {
                return this.zIPField;
            }
            set {
                this.zIPField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalInfo {
            get {
                return this.additionalInfoField;
            }
            set {
                this.additionalInfoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DonationDate {
            get {
                return this.donationDateField;
            }
            set {
                this.donationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CreditUnion {
        
        private int idField;
        
        private string nameField;
        
        private string abbrField;
        
        private string websiteField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Abbr {
            get {
                return this.abbrField;
            }
            set {
                this.abbrField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddDonationCompletedEventHandler(object sender, AddDonationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDonationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDonationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Donation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Donation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteDonationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateDonationCompletedEventHandler(object sender, UpdateDonationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDonationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDonationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Donation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Donation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDonationCompletedEventHandler(object sender, GetDonationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDonationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDonationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Donation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Donation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDonationsByCreditUnionCompletedEventHandler(object sender, GetDonationsByCreditUnionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDonationsByCreditUnionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDonationsByCreditUnionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Donation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Donation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDonationsByCategoryCompletedEventHandler(object sender, GetDonationsByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDonationsByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDonationsByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Donation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Donation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDonationsByDateCompletedEventHandler(object sender, GetDonationsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDonationsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDonationsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Donation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Donation[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591