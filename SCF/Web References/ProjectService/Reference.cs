//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace Coop.ProjectService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProjectServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ProjectService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProjectFAQOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProjectUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectFAQOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectFAQOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeactivateProjectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProjectService() {
            this.Url = global::Coop.Properties.Settings.Default.Coop_ProjectService_ProjectService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateProjectCompletedEventHandler CreateProjectCompleted;
        
        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;
        
        /// <remarks/>
        public event DeleteProjectCompletedEventHandler DeleteProjectCompleted;
        
        /// <remarks/>
        public event GetProjectCompletedEventHandler GetProjectCompleted;
        
        /// <remarks/>
        public event GetAllProjectsCompletedEventHandler GetAllProjectsCompleted;
        
        /// <remarks/>
        public event GetActiveProjectsCompletedEventHandler GetActiveProjectsCompleted;
        
        /// <remarks/>
        public event GetProjectsByCategoryCompletedEventHandler GetProjectsByCategoryCompleted;
        
        /// <remarks/>
        public event AddProjectFAQCompletedEventHandler AddProjectFAQCompleted;
        
        /// <remarks/>
        public event AddProjectUpdateCompletedEventHandler AddProjectUpdateCompleted;
        
        /// <remarks/>
        public event GetProjectFAQCompletedEventHandler GetProjectFAQCompleted;
        
        /// <remarks/>
        public event DeleteProjectFAQCompletedEventHandler DeleteProjectFAQCompleted;
        
        /// <remarks/>
        public event GetProjectUpdatesCompletedEventHandler GetProjectUpdatesCompleted;
        
        /// <remarks/>
        public event DeleteProjectUpdateCompletedEventHandler DeleteProjectUpdateCompleted;
        
        /// <remarks/>
        public event ActivateProjectCompletedEventHandler ActivateProjectCompleted;
        
        /// <remarks/>
        public event DeactivateProjectCompletedEventHandler DeactivateProjectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project CreateProject(string userHash, string name, string description, string www, int category, int creditUnion) {
            object[] results = this.Invoke("CreateProject", new object[] {
                        userHash,
                        name,
                        description,
                        www,
                        category,
                        creditUnion});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProjectAsync(string userHash, string name, string description, string www, int category, int creditUnion) {
            this.CreateProjectAsync(userHash, name, description, www, category, creditUnion, null);
        }
        
        /// <remarks/>
        public void CreateProjectAsync(string userHash, string name, string description, string www, int category, int creditUnion, object userState) {
            if ((this.CreateProjectOperationCompleted == null)) {
                this.CreateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProjectOperationCompleted);
            }
            this.InvokeAsync("CreateProject", new object[] {
                        userHash,
                        name,
                        description,
                        www,
                        category,
                        creditUnion}, this.CreateProjectOperationCompleted, userState);
        }
        
        private void OnCreateProjectOperationCompleted(object arg) {
            if ((this.CreateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProjectCompleted(this, new CreateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project UpdateProject(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion) {
            object[] results = this.Invoke("UpdateProject", new object[] {
                        userHash,
                        projectID,
                        newName,
                        newDescription,
                        newWWW,
                        newCategory,
                        newCreditUnion});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion) {
            this.UpdateProjectAsync(userHash, projectID, newName, newDescription, newWWW, newCategory, newCreditUnion, null);
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion, object userState) {
            if ((this.UpdateProjectOperationCompleted == null)) {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                        userHash,
                        projectID,
                        newName,
                        newDescription,
                        newWWW,
                        newCategory,
                        newCreditUnion}, this.UpdateProjectOperationCompleted, userState);
        }
        
        private void OnUpdateProjectOperationCompleted(object arg) {
            if ((this.UpdateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new UpdateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProject(string userHash, int projectID) {
            this.Invoke("DeleteProject", new object[] {
                        userHash,
                        projectID});
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(string userHash, int projectID) {
            this.DeleteProjectAsync(userHash, projectID, null);
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(string userHash, int projectID, object userState) {
            if ((this.DeleteProjectOperationCompleted == null)) {
                this.DeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("DeleteProject", new object[] {
                        userHash,
                        projectID}, this.DeleteProjectOperationCompleted, userState);
        }
        
        private void OnDeleteProjectOperationCompleted(object arg) {
            if ((this.DeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project GetProject(int projectID) {
            object[] results = this.Invoke("GetProject", new object[] {
                        projectID});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectAsync(int projectID) {
            this.GetProjectAsync(projectID, null);
        }
        
        /// <remarks/>
        public void GetProjectAsync(int projectID, object userState) {
            if ((this.GetProjectOperationCompleted == null)) {
                this.GetProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectOperationCompleted);
            }
            this.InvokeAsync("GetProject", new object[] {
                        projectID}, this.GetProjectOperationCompleted, userState);
        }
        
        private void OnGetProjectOperationCompleted(object arg) {
            if ((this.GetProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectCompleted(this, new GetProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProjects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project[] GetAllProjects() {
            object[] results = this.Invoke("GetAllProjects", new object[0]);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProjectsAsync() {
            this.GetAllProjectsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProjectsAsync(object userState) {
            if ((this.GetAllProjectsOperationCompleted == null)) {
                this.GetAllProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProjectsOperationCompleted);
            }
            this.InvokeAsync("GetAllProjects", new object[0], this.GetAllProjectsOperationCompleted, userState);
        }
        
        private void OnGetAllProjectsOperationCompleted(object arg) {
            if ((this.GetAllProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProjectsCompleted(this, new GetAllProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActiveProjects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project[] GetActiveProjects() {
            object[] results = this.Invoke("GetActiveProjects", new object[0]);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveProjectsAsync() {
            this.GetActiveProjectsAsync(null);
        }
        
        /// <remarks/>
        public void GetActiveProjectsAsync(object userState) {
            if ((this.GetActiveProjectsOperationCompleted == null)) {
                this.GetActiveProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveProjectsOperationCompleted);
            }
            this.InvokeAsync("GetActiveProjects", new object[0], this.GetActiveProjectsOperationCompleted, userState);
        }
        
        private void OnGetActiveProjectsOperationCompleted(object arg) {
            if ((this.GetActiveProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveProjectsCompleted(this, new GetActiveProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectsByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project[] GetProjectsByCategory(int categoryID) {
            object[] results = this.Invoke("GetProjectsByCategory", new object[] {
                        categoryID});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsByCategoryAsync(int categoryID) {
            this.GetProjectsByCategoryAsync(categoryID, null);
        }
        
        /// <remarks/>
        public void GetProjectsByCategoryAsync(int categoryID, object userState) {
            if ((this.GetProjectsByCategoryOperationCompleted == null)) {
                this.GetProjectsByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetProjectsByCategory", new object[] {
                        categoryID}, this.GetProjectsByCategoryOperationCompleted, userState);
        }
        
        private void OnGetProjectsByCategoryOperationCompleted(object arg) {
            if ((this.GetProjectsByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsByCategoryCompleted(this, new GetProjectsByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProjectFAQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProjectFAQ(string userHash, int projectID, string question, string answer) {
            object[] results = this.Invoke("AddProjectFAQ", new object[] {
                        userHash,
                        projectID,
                        question,
                        answer});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddProjectFAQAsync(string userHash, int projectID, string question, string answer) {
            this.AddProjectFAQAsync(userHash, projectID, question, answer, null);
        }
        
        /// <remarks/>
        public void AddProjectFAQAsync(string userHash, int projectID, string question, string answer, object userState) {
            if ((this.AddProjectFAQOperationCompleted == null)) {
                this.AddProjectFAQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectFAQOperationCompleted);
            }
            this.InvokeAsync("AddProjectFAQ", new object[] {
                        userHash,
                        projectID,
                        question,
                        answer}, this.AddProjectFAQOperationCompleted, userState);
        }
        
        private void OnAddProjectFAQOperationCompleted(object arg) {
            if ((this.AddProjectFAQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectFAQCompleted(this, new AddProjectFAQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProjectUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProjectUpdate(string userHash, int projectID, string message, int userID) {
            object[] results = this.Invoke("AddProjectUpdate", new object[] {
                        userHash,
                        projectID,
                        message,
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddProjectUpdateAsync(string userHash, int projectID, string message, int userID) {
            this.AddProjectUpdateAsync(userHash, projectID, message, userID, null);
        }
        
        /// <remarks/>
        public void AddProjectUpdateAsync(string userHash, int projectID, string message, int userID, object userState) {
            if ((this.AddProjectUpdateOperationCompleted == null)) {
                this.AddProjectUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectUpdateOperationCompleted);
            }
            this.InvokeAsync("AddProjectUpdate", new object[] {
                        userHash,
                        projectID,
                        message,
                        userID}, this.AddProjectUpdateOperationCompleted, userState);
        }
        
        private void OnAddProjectUpdateOperationCompleted(object arg) {
            if ((this.AddProjectUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectUpdateCompleted(this, new AddProjectUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectFAQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectFAQ[] GetProjectFAQ(int projectID) {
            object[] results = this.Invoke("GetProjectFAQ", new object[] {
                        projectID});
            return ((ProjectFAQ[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectFAQAsync(int projectID) {
            this.GetProjectFAQAsync(projectID, null);
        }
        
        /// <remarks/>
        public void GetProjectFAQAsync(int projectID, object userState) {
            if ((this.GetProjectFAQOperationCompleted == null)) {
                this.GetProjectFAQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectFAQOperationCompleted);
            }
            this.InvokeAsync("GetProjectFAQ", new object[] {
                        projectID}, this.GetProjectFAQOperationCompleted, userState);
        }
        
        private void OnGetProjectFAQOperationCompleted(object arg) {
            if ((this.GetProjectFAQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectFAQCompleted(this, new GetProjectFAQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProjectFAQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProjectFAQ(string userHash, int id) {
            this.Invoke("DeleteProjectFAQ", new object[] {
                        userHash,
                        id});
        }
        
        /// <remarks/>
        public void DeleteProjectFAQAsync(string userHash, int id) {
            this.DeleteProjectFAQAsync(userHash, id, null);
        }
        
        /// <remarks/>
        public void DeleteProjectFAQAsync(string userHash, int id, object userState) {
            if ((this.DeleteProjectFAQOperationCompleted == null)) {
                this.DeleteProjectFAQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectFAQOperationCompleted);
            }
            this.InvokeAsync("DeleteProjectFAQ", new object[] {
                        userHash,
                        id}, this.DeleteProjectFAQOperationCompleted, userState);
        }
        
        private void OnDeleteProjectFAQOperationCompleted(object arg) {
            if ((this.DeleteProjectFAQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectFAQCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectUpdates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectUpdate[] GetProjectUpdates(int projectID) {
            object[] results = this.Invoke("GetProjectUpdates", new object[] {
                        projectID});
            return ((ProjectUpdate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectUpdatesAsync(int projectID) {
            this.GetProjectUpdatesAsync(projectID, null);
        }
        
        /// <remarks/>
        public void GetProjectUpdatesAsync(int projectID, object userState) {
            if ((this.GetProjectUpdatesOperationCompleted == null)) {
                this.GetProjectUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetProjectUpdates", new object[] {
                        projectID}, this.GetProjectUpdatesOperationCompleted, userState);
        }
        
        private void OnGetProjectUpdatesOperationCompleted(object arg) {
            if ((this.GetProjectUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectUpdatesCompleted(this, new GetProjectUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProjectUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProjectUpdate(string userHash, int id) {
            this.Invoke("DeleteProjectUpdate", new object[] {
                        userHash,
                        id});
        }
        
        /// <remarks/>
        public void DeleteProjectUpdateAsync(string userHash, int id) {
            this.DeleteProjectUpdateAsync(userHash, id, null);
        }
        
        /// <remarks/>
        public void DeleteProjectUpdateAsync(string userHash, int id, object userState) {
            if ((this.DeleteProjectUpdateOperationCompleted == null)) {
                this.DeleteProjectUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectUpdateOperationCompleted);
            }
            this.InvokeAsync("DeleteProjectUpdate", new object[] {
                        userHash,
                        id}, this.DeleteProjectUpdateOperationCompleted, userState);
        }
        
        private void OnDeleteProjectUpdateOperationCompleted(object arg) {
            if ((this.DeleteProjectUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ActivateProject(string userHash, int id) {
            this.Invoke("ActivateProject", new object[] {
                        userHash,
                        id});
        }
        
        /// <remarks/>
        public void ActivateProjectAsync(string userHash, int id) {
            this.ActivateProjectAsync(userHash, id, null);
        }
        
        /// <remarks/>
        public void ActivateProjectAsync(string userHash, int id, object userState) {
            if ((this.ActivateProjectOperationCompleted == null)) {
                this.ActivateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateProjectOperationCompleted);
            }
            this.InvokeAsync("ActivateProject", new object[] {
                        userHash,
                        id}, this.ActivateProjectOperationCompleted, userState);
        }
        
        private void OnActivateProjectOperationCompleted(object arg) {
            if ((this.ActivateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeactivateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeactivateProject(string userHash, int id) {
            this.Invoke("DeactivateProject", new object[] {
                        userHash,
                        id});
        }
        
        /// <remarks/>
        public void DeactivateProjectAsync(string userHash, int id) {
            this.DeactivateProjectAsync(userHash, id, null);
        }
        
        /// <remarks/>
        public void DeactivateProjectAsync(string userHash, int id, object userState) {
            if ((this.DeactivateProjectOperationCompleted == null)) {
                this.DeactivateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeactivateProjectOperationCompleted);
            }
            this.InvokeAsync("DeactivateProject", new object[] {
                        userHash,
                        id}, this.DeactivateProjectOperationCompleted, userState);
        }
        
        private void OnDeactivateProjectOperationCompleted(object arg) {
            if ((this.DeactivateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeactivateProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Project {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string websiteField;
        
        private CreditUnion proposedByField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public CreditUnion ProposedBy {
            get {
                return this.proposedByField;
            }
            set {
                this.proposedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CreditUnion {
        
        private string nameField;
        
        private string abbrField;
        
        private string websiteField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Abbr {
            get {
                return this.abbrField;
            }
            set {
                this.abbrField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private string hashField;
        
        private string nameField;
        
        private string emailField;
        
        private CreditUnion cuField;
        
        private int accessLevelField;
        
        /// <remarks/>
        public string Hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public CreditUnion CU {
            get {
                return this.cuField;
            }
            set {
                this.cuField = value;
            }
        }
        
        /// <remarks/>
        public int AccessLevel {
            get {
                return this.accessLevelField;
            }
            set {
                this.accessLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectUpdate {
        
        private int idField;
        
        private string messageField;
        
        private System.DateTime datePostedField;
        
        private User postedByField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DatePosted {
            get {
                return this.datePostedField;
            }
            set {
                this.datePostedField = value;
            }
        }
        
        /// <remarks/>
        public User PostedBy {
            get {
                return this.postedByField;
            }
            set {
                this.postedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectFAQ {
        
        private int idField;
        
        private string questionField;
        
        private string answerField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
        
        /// <remarks/>
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateProjectCompletedEventHandler(object sender, CreateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, UpdateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProjectCompletedEventHandler(object sender, GetProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllProjectsCompletedEventHandler(object sender, GetAllProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetActiveProjectsCompletedEventHandler(object sender, GetActiveProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProjectsByCategoryCompletedEventHandler(object sender, GetProjectsByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddProjectFAQCompletedEventHandler(object sender, AddProjectFAQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectFAQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProjectFAQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddProjectUpdateCompletedEventHandler(object sender, AddProjectUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProjectUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProjectFAQCompletedEventHandler(object sender, GetProjectFAQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectFAQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectFAQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectFAQ[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectFAQ[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteProjectFAQCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProjectUpdatesCompletedEventHandler(object sender, GetProjectUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectUpdate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectUpdate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteProjectUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ActivateProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeactivateProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591