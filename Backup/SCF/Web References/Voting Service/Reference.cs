//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace Coop.Voting_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VotingServiceSoap", Namespace="http://tempuri.org/")]
    public partial class VotingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetProjectVotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentVotingWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVotingWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVotingWindowOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VotingService() {
            this.Url = global::Coop.Properties.Settings.Default.Coop_Voting_Service_VotingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProjectVotesCompletedEventHandler GetProjectVotesCompleted;
        
        /// <remarks/>
        public event SetVoteCompletedEventHandler SetVoteCompleted;
        
        /// <remarks/>
        public event GetCurrentVotingWindowCompletedEventHandler GetCurrentVotingWindowCompleted;
        
        /// <remarks/>
        public event CreateVotingWindowCompletedEventHandler CreateVotingWindowCompleted;
        
        /// <remarks/>
        public event UpdateVotingWindowCompletedEventHandler UpdateVotingWindowCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectVotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public KeyValueStruct[] GetProjectVotes(int votingWindowID) {
            object[] results = this.Invoke("GetProjectVotes", new object[] {
                        votingWindowID});
            return ((KeyValueStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectVotesAsync(int votingWindowID) {
            this.GetProjectVotesAsync(votingWindowID, null);
        }
        
        /// <remarks/>
        public void GetProjectVotesAsync(int votingWindowID, object userState) {
            if ((this.GetProjectVotesOperationCompleted == null)) {
                this.GetProjectVotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectVotesOperationCompleted);
            }
            this.InvokeAsync("GetProjectVotes", new object[] {
                        votingWindowID}, this.GetProjectVotesOperationCompleted, userState);
        }
        
        private void OnGetProjectVotesOperationCompleted(object arg) {
            if ((this.GetProjectVotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectVotesCompleted(this, new GetProjectVotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetVote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public KeyValueStruct[] SetVote(int votingWindowID, int projectID, int memberID, string memberHash) {
            object[] results = this.Invoke("SetVote", new object[] {
                        votingWindowID,
                        projectID,
                        memberID,
                        memberHash});
            return ((KeyValueStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void SetVoteAsync(int votingWindowID, int projectID, int memberID, string memberHash) {
            this.SetVoteAsync(votingWindowID, projectID, memberID, memberHash, null);
        }
        
        /// <remarks/>
        public void SetVoteAsync(int votingWindowID, int projectID, int memberID, string memberHash, object userState) {
            if ((this.SetVoteOperationCompleted == null)) {
                this.SetVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVoteOperationCompleted);
            }
            this.InvokeAsync("SetVote", new object[] {
                        votingWindowID,
                        projectID,
                        memberID,
                        memberHash}, this.SetVoteOperationCompleted, userState);
        }
        
        private void OnSetVoteOperationCompleted(object arg) {
            if ((this.SetVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVoteCompleted(this, new SetVoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentVotingWindow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VotingWindow GetCurrentVotingWindow() {
            object[] results = this.Invoke("GetCurrentVotingWindow", new object[0]);
            return ((VotingWindow)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentVotingWindowAsync() {
            this.GetCurrentVotingWindowAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentVotingWindowAsync(object userState) {
            if ((this.GetCurrentVotingWindowOperationCompleted == null)) {
                this.GetCurrentVotingWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentVotingWindowOperationCompleted);
            }
            this.InvokeAsync("GetCurrentVotingWindow", new object[0], this.GetCurrentVotingWindowOperationCompleted, userState);
        }
        
        private void OnGetCurrentVotingWindowOperationCompleted(object arg) {
            if ((this.GetCurrentVotingWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentVotingWindowCompleted(this, new GetCurrentVotingWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateVotingWindow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VotingWindow CreateVotingWindow(System.DateTime startDate, System.DateTime endDate, string userHash) {
            object[] results = this.Invoke("CreateVotingWindow", new object[] {
                        startDate,
                        endDate,
                        userHash});
            return ((VotingWindow)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVotingWindowAsync(System.DateTime startDate, System.DateTime endDate, string userHash) {
            this.CreateVotingWindowAsync(startDate, endDate, userHash, null);
        }
        
        /// <remarks/>
        public void CreateVotingWindowAsync(System.DateTime startDate, System.DateTime endDate, string userHash, object userState) {
            if ((this.CreateVotingWindowOperationCompleted == null)) {
                this.CreateVotingWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVotingWindowOperationCompleted);
            }
            this.InvokeAsync("CreateVotingWindow", new object[] {
                        startDate,
                        endDate,
                        userHash}, this.CreateVotingWindowOperationCompleted, userState);
        }
        
        private void OnCreateVotingWindowOperationCompleted(object arg) {
            if ((this.CreateVotingWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVotingWindowCompleted(this, new CreateVotingWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVotingWindow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VotingWindow UpdateVotingWindow(System.DateTime startDate, System.DateTime endDate, int votingWindowID, string userHash) {
            object[] results = this.Invoke("UpdateVotingWindow", new object[] {
                        startDate,
                        endDate,
                        votingWindowID,
                        userHash});
            return ((VotingWindow)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVotingWindowAsync(System.DateTime startDate, System.DateTime endDate, int votingWindowID, string userHash) {
            this.UpdateVotingWindowAsync(startDate, endDate, votingWindowID, userHash, null);
        }
        
        /// <remarks/>
        public void UpdateVotingWindowAsync(System.DateTime startDate, System.DateTime endDate, int votingWindowID, string userHash, object userState) {
            if ((this.UpdateVotingWindowOperationCompleted == null)) {
                this.UpdateVotingWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVotingWindowOperationCompleted);
            }
            this.InvokeAsync("UpdateVotingWindow", new object[] {
                        startDate,
                        endDate,
                        votingWindowID,
                        userHash}, this.UpdateVotingWindowOperationCompleted, userState);
        }
        
        private void OnUpdateVotingWindowOperationCompleted(object arg) {
            if ((this.UpdateVotingWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVotingWindowCompleted(this, new UpdateVotingWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class KeyValueStruct {
        
        private int keyField;
        
        private int valueField;
        
        /// <remarks/>
        public int Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public int Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VotingWindow {
        
        private int idField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProjectVotesCompletedEventHandler(object sender, GetProjectVotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectVotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectVotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValueStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValueStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetVoteCompletedEventHandler(object sender, SetVoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValueStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValueStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentVotingWindowCompletedEventHandler(object sender, GetCurrentVotingWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentVotingWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentVotingWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VotingWindow Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VotingWindow)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateVotingWindowCompletedEventHandler(object sender, CreateVotingWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVotingWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVotingWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VotingWindow Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VotingWindow)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateVotingWindowCompletedEventHandler(object sender, UpdateVotingWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVotingWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVotingWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VotingWindow Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VotingWindow)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591