//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCFWeb2.ProjectService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.ProjectServiceSoap")]
    public interface ProjectServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.Project CreateProject(string userHash, string name, string description, string www, int category, int creditUnion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProject", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project> CreateProjectAsync(string userHash, string name, string description, string www, int category, int creditUnion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.Project UpdateProject(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProject", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project> UpdateProjectAsync(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteProject(string userHash, int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProject", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteProjectAsync(string userHash, int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.Project GetProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProject", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project> GetProjectAsync(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.Project[] GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllProjects", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project[]> GetAllProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.Project[] GetActiveProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveProjects", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project[]> GetActiveProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProjectsByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.Project[] GetProjectsByCategory(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProjectsByCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project[]> GetProjectsByCategoryAsync(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProjectFAQ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddProjectFAQ(string userHash, int projectID, string question, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProjectFAQ", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddProjectFAQAsync(string userHash, int projectID, string question, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProjectUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddProjectUpdate(string userHash, int projectID, string message, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProjectUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddProjectUpdateAsync(string userHash, int projectID, string message, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProjectFAQ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.ProjectFAQ[] GetProjectFAQ(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProjectFAQ", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.ProjectFAQ[]> GetProjectFAQAsync(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProjectFAQ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteProjectFAQ(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProjectFAQ", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteProjectFAQAsync(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProjectUpdates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SCFWeb2.ProjectService.ProjectUpdate[] GetProjectUpdates(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProjectUpdates", ReplyAction="*")]
        System.Threading.Tasks.Task<SCFWeb2.ProjectService.ProjectUpdate[]> GetProjectUpdatesAsync(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProjectUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteProjectUpdate(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProjectUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteProjectUpdateAsync(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ActivateProject(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateProject", ReplyAction="*")]
        System.Threading.Tasks.Task ActivateProjectAsync(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeactivateProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeactivateProject(string userHash, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeactivateProject", ReplyAction="*")]
        System.Threading.Tasks.Task DeactivateProjectAsync(string userHash, int id);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Project : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string websiteField;
        
        private CreditUnion proposedByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
                this.RaisePropertyChanged("Website");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public CreditUnion ProposedBy {
            get {
                return this.proposedByField;
            }
            set {
                this.proposedByField = value;
                this.RaisePropertyChanged("ProposedBy");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CreditUnion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string abbrField;
        
        private string websiteField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Abbr {
            get {
                return this.abbrField;
            }
            set {
                this.abbrField = value;
                this.RaisePropertyChanged("Abbr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
                this.RaisePropertyChanged("Website");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
                this.RaisePropertyChanged("Latitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
                this.RaisePropertyChanged("Longitude");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string hashField;
        
        private string nameField;
        
        private string emailField;
        
        private CreditUnion cuField;
        
        private int accessLevelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
                this.RaisePropertyChanged("Hash");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public CreditUnion CU {
            get {
                return this.cuField;
            }
            set {
                this.cuField = value;
                this.RaisePropertyChanged("CU");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int AccessLevel {
            get {
                return this.accessLevelField;
            }
            set {
                this.accessLevelField = value;
                this.RaisePropertyChanged("AccessLevel");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string messageField;
        
        private System.DateTime datePostedField;
        
        private User postedByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime DatePosted {
            get {
                return this.datePostedField;
            }
            set {
                this.datePostedField = value;
                this.RaisePropertyChanged("DatePosted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public User PostedBy {
            get {
                return this.postedByField;
            }
            set {
                this.postedByField = value;
                this.RaisePropertyChanged("PostedBy");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectFAQ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string questionField;
        
        private string answerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
                this.RaisePropertyChanged("Question");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
                this.RaisePropertyChanged("Answer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProjectServiceSoapChannel : SCFWeb2.ProjectService.ProjectServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceSoapClient : System.ServiceModel.ClientBase<SCFWeb2.ProjectService.ProjectServiceSoap>, SCFWeb2.ProjectService.ProjectServiceSoap {
        
        public ProjectServiceSoapClient() {
        }
        
        public ProjectServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SCFWeb2.ProjectService.Project CreateProject(string userHash, string name, string description, string www, int category, int creditUnion) {
            return base.Channel.CreateProject(userHash, name, description, www, category, creditUnion);
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project> CreateProjectAsync(string userHash, string name, string description, string www, int category, int creditUnion) {
            return base.Channel.CreateProjectAsync(userHash, name, description, www, category, creditUnion);
        }
        
        public SCFWeb2.ProjectService.Project UpdateProject(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion) {
            return base.Channel.UpdateProject(userHash, projectID, newName, newDescription, newWWW, newCategory, newCreditUnion);
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project> UpdateProjectAsync(string userHash, int projectID, string newName, string newDescription, string newWWW, int newCategory, int newCreditUnion) {
            return base.Channel.UpdateProjectAsync(userHash, projectID, newName, newDescription, newWWW, newCategory, newCreditUnion);
        }
        
        public void DeleteProject(string userHash, int projectID) {
            base.Channel.DeleteProject(userHash, projectID);
        }
        
        public System.Threading.Tasks.Task DeleteProjectAsync(string userHash, int projectID) {
            return base.Channel.DeleteProjectAsync(userHash, projectID);
        }
        
        public SCFWeb2.ProjectService.Project GetProject(int projectID) {
            return base.Channel.GetProject(projectID);
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project> GetProjectAsync(int projectID) {
            return base.Channel.GetProjectAsync(projectID);
        }
        
        public SCFWeb2.ProjectService.Project[] GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project[]> GetAllProjectsAsync() {
            return base.Channel.GetAllProjectsAsync();
        }
        
        public SCFWeb2.ProjectService.Project[] GetActiveProjects() {
            return base.Channel.GetActiveProjects();
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project[]> GetActiveProjectsAsync() {
            return base.Channel.GetActiveProjectsAsync();
        }
        
        public SCFWeb2.ProjectService.Project[] GetProjectsByCategory(int categoryID) {
            return base.Channel.GetProjectsByCategory(categoryID);
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.Project[]> GetProjectsByCategoryAsync(int categoryID) {
            return base.Channel.GetProjectsByCategoryAsync(categoryID);
        }
        
        public int AddProjectFAQ(string userHash, int projectID, string question, string answer) {
            return base.Channel.AddProjectFAQ(userHash, projectID, question, answer);
        }
        
        public System.Threading.Tasks.Task<int> AddProjectFAQAsync(string userHash, int projectID, string question, string answer) {
            return base.Channel.AddProjectFAQAsync(userHash, projectID, question, answer);
        }
        
        public int AddProjectUpdate(string userHash, int projectID, string message, int userID) {
            return base.Channel.AddProjectUpdate(userHash, projectID, message, userID);
        }
        
        public System.Threading.Tasks.Task<int> AddProjectUpdateAsync(string userHash, int projectID, string message, int userID) {
            return base.Channel.AddProjectUpdateAsync(userHash, projectID, message, userID);
        }
        
        public SCFWeb2.ProjectService.ProjectFAQ[] GetProjectFAQ(int projectID) {
            return base.Channel.GetProjectFAQ(projectID);
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.ProjectFAQ[]> GetProjectFAQAsync(int projectID) {
            return base.Channel.GetProjectFAQAsync(projectID);
        }
        
        public void DeleteProjectFAQ(string userHash, int id) {
            base.Channel.DeleteProjectFAQ(userHash, id);
        }
        
        public System.Threading.Tasks.Task DeleteProjectFAQAsync(string userHash, int id) {
            return base.Channel.DeleteProjectFAQAsync(userHash, id);
        }
        
        public SCFWeb2.ProjectService.ProjectUpdate[] GetProjectUpdates(int projectID) {
            return base.Channel.GetProjectUpdates(projectID);
        }
        
        public System.Threading.Tasks.Task<SCFWeb2.ProjectService.ProjectUpdate[]> GetProjectUpdatesAsync(int projectID) {
            return base.Channel.GetProjectUpdatesAsync(projectID);
        }
        
        public void DeleteProjectUpdate(string userHash, int id) {
            base.Channel.DeleteProjectUpdate(userHash, id);
        }
        
        public System.Threading.Tasks.Task DeleteProjectUpdateAsync(string userHash, int id) {
            return base.Channel.DeleteProjectUpdateAsync(userHash, id);
        }
        
        public void ActivateProject(string userHash, int id) {
            base.Channel.ActivateProject(userHash, id);
        }
        
        public System.Threading.Tasks.Task ActivateProjectAsync(string userHash, int id) {
            return base.Channel.ActivateProjectAsync(userHash, id);
        }
        
        public void DeactivateProject(string userHash, int id) {
            base.Channel.DeactivateProject(userHash, id);
        }
        
        public System.Threading.Tasks.Task DeactivateProjectAsync(string userHash, int id) {
            return base.Channel.DeactivateProjectAsync(userHash, id);
        }
    }
}
