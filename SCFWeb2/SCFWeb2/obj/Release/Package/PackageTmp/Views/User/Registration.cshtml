@model SCFWeb2.Models.RegistrationViewModel
<!--=== Content Part ===-->
<div class="container content">


    <div class="heading heading-v1 margin-bottom-40">
        <h2>Register New Account</h2>
    </div>


        <div class="row">
            <div class="col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">



@using (Html.BeginForm("Registration", "User", FormMethod.Post)) { 

     
                    <div class="reg-header">
                        <p>Already Signed Up? Click <a href="/User/Login" class="color-green">Sign In</a> to login your account.</p>
                    </div>

                    <fieldset>

                        <div class="form-group">
                            <label>First Name</label>
                            @Html.TextBoxFor(model => model.firstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.firstName, null, new { @class = "help-block" })
                        </div>

                        <div class="form-group">
                            <label>Last Name</label>
                            @Html.TextBoxFor(model => model.lastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.lastName, null, new { @class = "help-block" })
                        </div>

                        <div class="form-group">
                            <label>Email Address</label>
                            @Html.TextBoxFor(model => model.emailAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.emailAddress, null, new { @class = "help-block" })
                          </div>

                        <div class="form-group">
                            <label>Credit Union <span class="color-red">*</span></label>
          
                           @Html.DropDownListFor(model => model.creditUnionId, (SelectList)ViewBag.creditUnionList, new { @class = "form-control " })
                             

                        </div>

@{
    string collapseClass = "collapse";
    if (Model.creditUnionId == -1)
    {
            collapseClass = "";
    }

                        <div id="creditUnionFormGroup" class="form-group @collapseClass">
                            <label>Credit Union Name<span class="color-red">*</span></label>
                            @Html.TextBoxFor(model => model.creditUnionName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.creditUnionName, null, new { @class = "help-block" })
                        </div>
}

                        <div class="form-group row">
                            <div class="col-sm-6">
                                <label>Password <span class="color-red">*</span></label>
                                @Html.PasswordFor(model => model.password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.password, null, new { @class = "help-block" })
                            </div>
                            <div class="col-sm-6">
                                <label>Confirm Password <span class="color-red">*</span></label>
                                @Html.PasswordFor(model => model.passwordConfirm, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.passwordConfirm, null, new { @class = "help-block" })
                            </div>
                        </div>

                            <hr>

                            <div class="row">

                                <div class="col-lg-6 text-right">
                                    <button class="btn-u" type="submit">Register</button>

                                </div>
                            </div>
                    </fieldset>
}
            </div>
        </div>
    </div><!--/container-->
<!--=== End Content Part ===-->




<script type="text/javascript">
    $(document).ready(function () {

        $("#creditUnionId").change(function () {
            // alert( "Handler for .change() called." );
            if ($("#creditUnionId").val() == "-1") {
                $("#creditUnionFormGroup").show();
            }else{
                $("#creditUnionFormGroup").hide();
            }
        });

        $(function () {
            // any validation summary items should be encapsulated by a class alert and alert-danger
            $('.validation-summary-errors').each(function () {
                $(this).addClass('alert');
                $(this).addClass('alert-danger');
            });

            // update validation fields on submission of form
            $('form').submit(function () {
                if ($(this).valid()) {
                    $(this).find('div.control-group').each(function () {
                        if ($(this).find('span.field-validation-error').length == 0) {
                            $(this).removeClass('has-error');
                            $(this).addClass('has-success');
                        }
                    });
                }
                else {
                    $(this).find('div.control-group').each(function () {
                        if ($(this).find('span.field-validation-error').length > 0) {
                            $(this).removeClass('has-success');
                            $(this).addClass('has-error');
                        }
                    });
                    $('.validation-summary-errors').each(function () {
                        if ($(this).hasClass('alert-danger') == false) {
                            $(this).addClass('alert');
                            $(this).addClass('alert-danger');
                        }
                    });
                }
            });

            // check each form-group for errors on ready
            $('form').each(function () {
                $(this).find('div.form-group').each(function () {
                    if ($(this).find('span.field-validation-error').length > 0) {
                        $(this).addClass('has-error');
                    }
                });
            });
        });


});
</script>